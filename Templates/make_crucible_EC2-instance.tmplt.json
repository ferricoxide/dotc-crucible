{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "AssignInstanceRole": {
      "Fn::Not": [
        { "Fn::Equals": [ { "Ref": "InstanceRole" }, "" ] }
      ]
    },
    "AssignPublicIp": {
      "Fn::Not": [
        { "Fn::Equals": [ { "Ref": "NoPublicIp" }, "true" ] }
      ]
    },
    "CreateCrucibleHomeVolume": {
      "Fn::Not": [
        { "Fn::Equals": [ { "Ref": "CrucibleUseHomeEbs" }, "" ] }
      ]
    },
    "NotGenFive": {
      "Fn::Not": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Fn::Select": [
                    "0",
                    {
                      "Fn::Split": [
                        ".",
                        { "Ref": "InstanceType" }
                      ]
                    }
                  ]
                },
                "c5"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Fn::Select": [
                    "0",
                    {
                      "Fn::Split": [
                        ".",
                        { "Ref": "InstanceType" }
                      ]
                    }
                  ]
                },
                "m5"
              ]
            }
          ]
        }
      ]
    },
    "Reboot": {
      "Fn::Not": [
        { "Fn::Equals": [ { "Ref": "NoReboot" }, "true" ] }
      ]
    },
    "UseCfnAppInstaller": {
      "Fn::Not": [
        { "Fn::Equals": [ { "Ref": "CrucibleAppPrepUrl" }, "" ] }
      ]
    },
    "UseCfnUrl": {
      "Fn::Not": [
        { "Fn::Equals": [ { "Ref": "CfnEndpointUrl" }, "" ] }
      ]
    },
    "UseEnvironment": {
      "Fn::Not": [
        { "Fn::Equals": [ { "Ref": "WatchmakerEnvironment" }, "" ] }
      ]
    },
    "UseWamConfig": {
      "Fn::Not": [
        { "Fn::Equals": [ { "Ref": "WatchmakerConfig" }, "" ] }
      ]
    }
  },
  "Description": "This template deploys a STIG-hardened Enterprise Linux 7 instance to host the Crucible service.",
  "Mappings": {
    "InstanceTypeCapabilities": {
      "IsGenFive": {
        "ExternDeviceName": "/dev/xvdf",
        "InternDeviceName": "/dev/nvme1n1"
      },
      "PreGenFive": {
        "ExternDeviceName": "/dev/xvdf",
        "InternDeviceName": "/dev/xvdf"
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "EC2 Instance Configuration"
          },
          "Parameters": [
            "Hostname",
            "Domainname",
            "AmiId",
            "InstanceType",
            "ProvisionUser",
            "KeyPairName",
            "AdminPubkeyURL",
            "SubnetId",
            "NoPublicIp",
            "InstanceRole",
            "SecurityGroupIds",
            "NoReboot"
          ]
        },
        {
          "Label": {
            "default": "Watchmaker Options"
          },
          "Parameters": [
            "EpelRepo",
            "PipRpm",
            "PyStache",
            "PipIndexFips",
            "WatchmakerConfig",
            "WatchmakerEnvironment"
          ]
        },
        {
          "Label": {
            "default": "Crucible Configuration Options"
          },
          "Parameters": [
            "CrucibleUseHomeEbs",
            "CrucibleHomeMountPoint",
            "CrucibleHomeEbsSize",
            "CrucibleHomeEbsType",
            "CrucibleOsPrepUrl",
            "CrucibleAppPrepUrl",
            "CrucibleBinaryPackage",
            "CrucibleDataSharePath",
            "CrucibleDataShareType"
          ]
        },
        {
          "Label": {
            "default": "JDBC Options"
          },
          "Parameters": [
            "CruciblePgsqlHost",
            "CruciblePgsqlInst",
            "CruciblePgsqlManager",
            "CruciblePgsqlPassword"
          ]
        }
      ]
    }
  },
  "Outputs": {
    "CrucibleInstanceId": {
      "Description": "Instance ID",
      "Value": { "Ref": "CrucibleHost" }
    }
  },
  "Parameters": {
    "AdminPubkeyURL": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Description": "URL the file containing the admin users' SSH public keys.",
      "Type": "String"
    },
    "AmiId": {
      "AllowedPattern": "^ami-[0-9a-z]{8}$|^ami-[0-9a-z]{17}$",
      "Description": "ID of the AMI to launch",
      "Type": "String"
    },
    "CfnEndpointUrl": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Default": "",
      "Description": "URL to the CloudFormation Endpoint. e.g. https://cloudformation.us-east-1.amazonaws.com",
      "Type": "String"
    },
    "CrucibleAppPrepUrl": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Default": "",
      "Description": "URL to the Crucible Datacenter EC2 application installer/configuration script.",
      "Type": "String"
    },
    "CrucibleBinaryPackage": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$|s3://.*$",
      "Default": "",
      "Description": "URL to the Crucible Datacenter binary-installer file.",
      "Type": "String"
    },
    "CrucibleDataSharePath": {
      "Default": "",
      "Description": "Share-path of shared Crucible-home.",
      "Type": "String"
    },
    "CrucibleDataShareType": {
      "AllowedValues": [
        "glusterfs",
        "nfs"
      ],
      "Description": "Type of network share hosting persisted Crucible-home content.",
      "Type": "String"
    },
    "CrucibleHomeEbsSize": {
      "ConstraintDescription": "Must be between 5GB and 16384GB.",
      "Default": "10",
      "Description": "Size in GB of the EBS volume to create. Ignored if \"CrucibleUseHomeEbs\" is blank",
      "MaxValue": "16384",
      "MinValue": "5",
      "Type": "Number"
    },
    "CrucibleHomeEbsType": {
      "AllowedValues": [
        "gp2",
        "io1",
        "sc1",
        "st1",
        "standard"
      ],
      "Default": "gp2",
      "Description": "Type of EBS volume to create. Ignored if \"CrucibleUseHomeEbs\" is blank",
      "Type": "String"
    },
    "CrucibleHomeMountPoint": {
      "AllowedPattern": "/.*",
      "Default": "/var/backups",
      "Description": "Filesystem path to mount the backup-stageing volume. Ignored if \"CrucibleUseHomeEbs\" is blank",
      "Type": "String"
    },
    "CrucibleOsPrepUrl": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Default": "",
      "Description": "URL to the Crucible Datacenter EC2 OS-preparationscript.",
      "Type": "String"
    },
    "CruciblePgsqlHost": {
      "Description": "FQDN of PostGreSQL host.",
      "Type": "String"
    },
    "CruciblePgsqlInst": {
      "Description": "Name of the primary PostGreSQL instance.",
      "Type": "String"
    },
    "CruciblePgsqlManager": {
      "Description": "Manager-username of the primary PostGreSQL instance.",
      "Type": "String"
    },
    "CruciblePgsqlPassword": {
      "Description": "Manager-password  of the primary PostGreSQL instance.",
      "NoEcho": "True",
      "Type": "String"
    },
    "CrucibleProxyFqdn": {
      "Description": "FQDN of the front-end proxy host/service for Crucible.",
      "Type": "String"
    },
    "CrucibleUseHomeEbs": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "false",
      "Description": "Whether to create/mount a secondary EBS for hosting Crucible binaries",
      "Type": "String"
    },
    "Domainname": {
      "ConstraintDescription": "An alphanumeric string to complete the domain portion of the instance's FQDN.",
      "Description": "Suffix for Crucible's hostname and DNS record",
      "Type": "String"
    },
    "EpelRepo": {
      "AllowedPattern": "^[a-z][a-z0-9-]*$",
      "ConstraintDescription": "An alphanumeric string that represents the EPEL yum repo's label.",
      "Default": "epel",
      "Description": "Name of network's EPEL repo.",
      "Type": "String"
    },
    "Hostname": {
      "ConstraintDescription": "An alphanumeric string to complete the hostname portion of the instance's FQDN.",
      "Default": "crucible",
      "Description": "Node-name for Crucible's hostname and DNS record",
      "Type": "String"
    },
    "InstanceRole": {
      "Default": "",
      "Description": "IAM instance role to apply to the instance(s)",
      "Type": "String"
    },
    "InstanceType": {
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m5.large",
        "m5.xlarge",
        "m5.2xlarge",
        "m5.4xlarge",
        "m5.12xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c5.large",
        "c5.xlarge",
        "c5.2xlarge",
        "c5.4xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge"
      ],
      "Default": "t2.large",
      "Description": "Amazon EC2 instance type",
      "Type": "String"
    },
    "KeyPairName": {
      "Description": "Public/private key pairs allowing the provisioning-user to securely connect to the instance after it launches.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "NoPublicIp": {
      "AllowedValues": [
        "false",
        "true"
      ],
      "Default": "true",
      "Description": "Controls whether to assign the instance a public IP. Recommended to leave at \"true\" _unless_ launching in a public subnet",
      "Type": "String"
    },
    "NoReboot": {
      "AllowedValues": [
        "false",
        "true"
      ],
      "Default": "false",
      "Description": "Controls whether to reboot the instance as the last step of cfn-init execution",
      "Type": "String"
    },
    "PipIndexFips": {
      "AllowedPattern": "^$|^http://.*$|^https://.*$",
      "Default": "https://pypi.org/simple/",
      "Description": "URL of pip index  that is compatible with FIPS 140-2 requirements.",
      "Type": "String"
    },
    "PipRpm": {
      "Default": "python2-pip",
      "Description": "Name of preferred pip RPM.",
      "Type": "String"
    },
    "ProvisionUser": {
      "AllowedPattern": "[a-z0-9]{6,12}+",
      "ConstraintDescription": "Alphanumeric string between 6 and 12 characters.",
      "Default": "crucadm",
      "Description": "Default login user account name.",
      "Type": "String"
    },
    "PyStache": {
      "Default": "pystache",
      "Description": "Name of preferred pystache RPM.",
      "Type": "String"
    },
    "SecurityGroupIds": {
      "Description": "List of security groups to apply to the instance(s)",
      "Type": "List<AWS::EC2::SecurityGroup::Id>"
    },
    "SubnetId": {
      "Description": "Subnet to associate to the Instance",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "WatchmakerConfig": {
      "AllowedPattern": "^$|^http[s]?://.*$",
      "Default": "",
      "Description": "(Optional) URL to a Watchmaker config file",
      "Type": "String"
    },
    "WatchmakerEnvironment": {
      "AllowedValues": [
        "",
        "dev",
        "test",
        "prod"
      ],
      "Default": "",
      "Description": "Environment in which the instance is being deployed",
      "Type": "String"
    }
  },
  "Resources": {
    "CrucibleHost": {
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": "1",
          "Timeout": "PT30M"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Authentication": {
          "Ec2IamRole": {
            "roleName": { "Ref": "InstanceRole" },
            "type": "S3"
          }
        },
        "AWS::CloudFormation::Init": {
          "admkey-install": {
            "commands": {
              "1-admkey-install": {
                "command": "bash -xe /etc/cfn/scripts/admkey.sh"
              }
            },
            "files": {
              "/etc/cfn/files/adminkeys.pub": {
                "group": "root",
                "mode": "000600",
                "owner": "root",
                "source": { "Ref": "AdminPubkeyURL" }
              },
              "/etc/cfn/scripts/admkey.sh": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "#!/bin/bash\n\n",
                      "PROVHOME=$(getent passwd ",
                      { "Ref": "ProvisionUser" },
                      " | awk -F\":\" '{print $6}')\n",
                      "\n",
                      "install -b -m 000600 -o ",
                      { "Ref": "ProvisionUser" },
                      " -g ",
                      { "Ref": "ProvisionUser" },
                      " /etc/cfn/files/adminkeys.pub ${PROVHOME}/.ssh/authorized_keys\n",
                      "\n"
                    ]
                  ]
                },
                "group": "root",
                "mode": "000700",
                "owner": "root"
              }
            }
          },
          "app-install": {
            "commands": {
              "10-app-install": {
                "command": "bash -xe /etc/cfn/scripts/crucibleprep.sh"
              }
            },
            "files": {
              "/etc/cfn/scripts/crucibleprep.sh": {
                "group": "root",
                "mode": "000700",
                "owner": "root",
                "source": { "Ref": "CrucibleAppPrepUrl" }
              }
            }
          },
          "configSets": {
            "launch": [
              "setup",
              "admkey-install",
              "watchmaker-install",
              "watchmaker-launch",
              {
                "Fn::If": [
                  "UseCfnAppInstaller",
                  [
                    "osprep-launch",
                    "app-install"
                  ],
                  { "Ref": "AWS::NoValue" }
                ]
              },
              "finalize",
              {
                "Fn::If": [
                  "Reboot",
                  "reboot",
                  { "Ref": "AWS::NoValue" }
                ]
              }
            ]
          },
          "finalize": {
            "commands": {
              "10-signal-success": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "/opt/aws/bin/cfn-signal -e 0",
                      " --stack ",
                      { "Ref": "AWS::StackName" },
                      " --resource CrucibleHost",
                      {
                        "Fn::If": [
                          "UseCfnUrl",
                          {
                            "Fn::Join": [
                              "",
                              [
                                " --url ",
                                { "Ref": "CfnEndpointUrl" }
                              ]
                            ]
                          },
                          ""
                        ]
                      },
                      " --region ",
                      { "Ref": "AWS::Region" },
                      "\n"
                    ]
                  ]
                },
                "ignoreErrors": "true"
              }
            }
          },
          "install-updates": {
            "commands": {
              "10-install-updates": {
                "command": "yum -y update"
              }
            }
          },
          "osprep-launch": {
            "commands": {
              "1-osprep-launch": {
                "command": "bash -xe /etc/cfn/scripts/osprep.sh"
              }
            },
            "files": {
              "/etc/cfn/scripts/osprep.sh": {
                "group": "root",
                "mode": "000700",
                "owner": "root",
                "source": { "Ref": "CrucibleOsPrepUrl" }
              }
            }
          },
          "reboot": {
            "commands": {
              "10-reboot": {
                "command": "shutdown -r +1 &"
              }
            }
          },
          "setup": {
            "files": {
              "/etc/cfn/Crucible.envs": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "CRUCIBLE_FQDN=",
                      { "Ref": "CrucibleProxyFqdn" },
                      "\n",
                      "CRUCIBLE_SOFTWARE_URL=",
                      { "Ref": "CrucibleBinaryPackage" },
                      "\n",
                      "CRUCIBLE_SHARE_PATH=",
                      { "Ref": "CrucibleDataSharePath" },
                      "\n",
                      "CRUCIBLE_SHARE_TYPE=",
                      { "Ref": "CrucibleDataShareType" },
                      "\n",
                      "CRUCIBLE_PGSQL_HOST=",
                      { "Ref": "CruciblePgsqlHost" },
                      "\n",
                      "CRUCIBLE_PGSQL_INST=",
                      { "Ref": "CruciblePgsqlInst" },
                      "\n",
                      "CRUCIBLE_PGSQL_MANAGER=",
                      { "Ref": "CruciblePgsqlManager" },
                      "\n",
                      "CRUCIBLE_PGSQL_PASSWORD=",
                      { "Ref": "CruciblePgsqlPassword" },
                      "\n"
                    ]
                  ]
                },
                "group": "root",
                "mode": "000700",
                "owner": "root"
              },
              "/etc/cfn/cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      { "Ref": "AWS::StackId" },
                      "\n",
                      "region=",
                      { "Ref": "AWS::Region" },
                      "\n",
                      {
                        "Fn::If": [
                          "UseCfnUrl",
                          {
                            "Fn::Join": [
                              "",
                              [
                                "url=",
                                { "Ref": "CfnEndpointUrl" },
                                "\n"
                              ]
                            ]
                          },
                          ""
                        ]
                      },
                      "interval=1",
                      "\n",
                      "verbose=true",
                      "\n"
                    ]
                  ]
                },
                "group": "root",
                "mode": "000400",
                "owner": "root"
              },
              "/etc/cfn/files/crucible.service.tmplt": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[Unit]\n",
                      "Description=Crucible Service\n",
                      "After=network.target iptables.service ",
                      "firewalld.service firewalld.service httpd.service\n",
                      "\n",
                      "[Service]\n",
                      "Environment=FISHEYE_INST=/var/crucible\n",
                      "Environment=JAVA_HOME=/usr/lib/jvm/jre\n",
                      "Type=forking\n",
                      "User=crucible\n",
                      "ExecStartPre=/bin/sleep 5\n",
                      "ExecStart=",
                      { "Ref": "CrucibleHomeMountPoint" },
                      "/__FECRUVERS__/bin/start.sh\n",
                      "ExecStop=",
                      { "Ref": "CrucibleHomeMountPoint" },
                      "/__FECRUVERS__/bin/stop.sh\n",
                      "ExecReload=",
                      { "Ref": "CrucibleHomeMountPoint" },
                      "/__FECRUVERS__/bin/stop.sh",
                      " | sleep 60 | ",
                      { "Ref": "CrucibleHomeMountPoint" },
                      "/__FECRUVERS__/bin/start.sh\n",
                      "\n",
                      "[Install]\n",
                      "WantedBy=multi-user.target\n"
                    ]
                  ]
                },
                "group": "root",
                "mode": "000700",
                "owner": "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.CrucibleHost.Metadata\n",
                      "action=/opt/aws/bin/cfn-init -v -c update",
                      " --stack ",
                      { "Ref": "AWS::StackName" },
                      " --resource CrucibleHost",
                      {
                        "Fn::If": [
                          "UseCfnUrl",
                          {
                            "Fn::Join": [
                              "",
                              [
                                " --url ",
                                { "Ref": "CfnEndpointUrl" }
                              ]
                            ]
                          },
                          ""
                        ]
                      },
                      " --region ",
                      { "Ref": "AWS::Region" },
                      "\n",
                      "runas=root\n"
                    ]
                  ]
                },
                "group": "root",
                "mode": "000400",
                "owner": "root"
              },
              "/etc/cfn/scripts/watchmaker-install.sh": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "#!/bin/bash\n\n",
                      "PYPI_URL=",
                      { "Ref": "PipIndexFips" },
                      "\n",
                      "pip install --index-url=\"$PYPI_URL\" wheel==0.29.0\n",
                      "pip install",
                      " --index-url=\"$PYPI_URL\"",
                      " --upgrade pip setuptools boto3 watchmaker\n\n"
                    ]
                  ]
                },
                "group": "root",
                "mode": "000700",
                "owner": "root"
              }
            },
            "services": {
              "sysvinit": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "/etc/cfn/cfn-hup.conf",
                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                  ]
                }
              }
            },
            "users": {
              "crucible": {
                "homeDir": { "Ref": "CrucibleHomeMountPoint" }
              }
            }
          },
          "watchmaker-install": {
            "commands": {
              "10-watchmaker-install": {
                "command": "bash -xe /etc/cfn/scripts/watchmaker-install.sh"
              }
            }
          },
          "watchmaker-launch": {
            "commands": {
              "10-watchmaker-launch": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "watchmaker --log-level debug",
                      " --log-dir /var/log/watchmaker",
                      " --no-reboot",
                      {
                        "Fn::If": [
                          "UseWamConfig",
                          {
                            "Fn::Join": [
                              "",
                              [
                                " --config \"",
                                { "Ref": "WatchmakerConfig" },
                                "\""
                              ]
                            ]
                          },
                          ""
                        ]
                      },
                      {
                        "Fn::If": [
                          "UseEnvironment",
                          {
                            "Fn::Join": [
                              "",
                              [
                                " --env \"",
                                { "Ref": "WatchmakerEnvironment" },
                                "\""
                              ]
                            ]
                          },
                          ""
                        ]
                      }
                    ]
                  ]
                }
              }
            }
          },
          "watchmaker-update": {
            "commands": {
              "10-watchmaker-update": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "watchmaker --log-level debug",
                      " --log-dir /var/log/watchmaker",
                      " --salt-states None",
                      " --no-reboot",
                      {
                        "Fn::If": [
                          "UseWamConfig",
                          {
                            "Fn::Join": [
                              "",
                              [
                                " --config \"",
                                { "Ref": "WatchmakerConfig" },
                                "\""
                              ]
                            ]
                          },
                          ""
                        ]
                      },
                      {
                        "Fn::If": [
                          "UseEnvironment",
                          {
                            "Fn::Join": [
                              "",
                              [
                                " --env \"",
                                { "Ref": "WatchmakerEnvironment" },
                                "\""
                              ]
                            ]
                          },
                          ""
                        ]
                      }
                    ]
                  ]
                }
              }
            }
          }
        }
      },
      "Properties": {
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "DeleteOnTermination": "true",
              "VolumeType": "gp2"
            }
          },
          {
            "Fn::If": [
              "CreateCrucibleHomeVolume",
              {
                "DeviceName": {
                  "Fn::If": [
                    "NotGenFive",
                    {
                      "Fn::FindInMap": [
                        "InstanceTypeCapabilities",
                        "PreGenFive",
                        "ExternDeviceName"
                      ]
                    },
                    {
                      "Fn::FindInMap": [
                        "InstanceTypeCapabilities",
                        "IsGenFive",
                        "ExternDeviceName"
                      ]
                    }
                  ]
                },
                "Ebs": {
                  "DeleteOnTermination": "true",
                  "VolumeSize": { "Ref": "CrucibleHomeEbsSize" },
                  "VolumeType": { "Ref": "CrucibleHomeEbsType" }
                }
              },
              { "Ref": "AWS::NoValue" }
            ]
          }
        ],
        "IamInstanceProfile": {
          "Fn::If": [
            "AssignInstanceRole",
            { "Ref": "InstanceRole" },
            { "Ref": "AWS::NoValue" }
          ]
        },
        "ImageId": { "Ref": "AmiId" },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyPairName" },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": {
              "Fn::If": [
                "AssignPublicIp",
                "true",
                "false"
              ]
            },
            "DeviceIndex": "0",
            "GroupSet": { "Ref": "SecurityGroupIds" },
            "SubnetId": { "Ref": "SubnetId" }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  { "Ref": "AWS::StackName" }
                ]
              ]
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#cloud-config\n",
                "\n",
                "system_info:\n",
                "  default_user:\n",
                "    name: ",
                { "Ref": "ProvisionUser" },
                "\n",
                "\n",
                "hostname: ",
                { "Ref": "Hostname" },
                "\n",
                "fqdn: ",
                { "Ref": "Hostname" },
                ".",
                { "Ref": "Domainname" },
                "\n",
                "\n",
                {
                  "Fn::If": [
                    "CreateCrucibleHomeVolume",
                    {
                      "Fn::Join": [
                        "",
                        [
                          "bootcmd:\n",
                          "- cloud-init-per instance mkfs-appvolume mkfs -t ext4 ",
                          {
                            "Fn::If": [
                              "NotGenFive",
                              {
                                "Fn::FindInMap": [
                                  "InstanceTypeCapabilities",
                                  "PreGenFive",
                                  "InternDeviceName"
                                ]
                              },
                              {
                                "Fn::FindInMap": [
                                  "InstanceTypeCapabilities",
                                  "IsGenFive",
                                  "InternDeviceName"
                                ]
                              }
                            ]
                          },
                          "\n",
                          "\n",
                          "mounts:\n",
                          "- [ ",
                          {
                            "Fn::If": [
                              "NotGenFive",
                              {
                                "Fn::FindInMap": [
                                  "InstanceTypeCapabilities",
                                  "PreGenFive",
                                  "InternDeviceName"
                                ]
                              },
                              {
                                "Fn::FindInMap": [
                                  "InstanceTypeCapabilities",
                                  "IsGenFive",
                                  "InternDeviceName"
                                ]
                              }
                            ]
                          },
                          ", ",
                          { "Ref": "CrucibleHomeMountPoint" },
                          " ]\n"
                        ]
                      ]
                    },
                    ""
                  ]
                },
                "\n",
                "runcmd:\n",
                "  - |\n",
                "    # Export cert bundle ENVs\n",
                "    export AWS_CA_BUNDLE=/etc/pki/tls/certs/ca-bundle.crt\n",
                "    export REQUESTS_CA_BUNDLE=/etc/pki/tls/certs/ca-bundle.crt\n\n",
                "    \n",
                "    # Define our error-handler\n",
                "    function err_exit {\n",
                "       echo \"${1}\"\n",
                "       logger -p kern.crit -t UserData \"${1}\"\n",
                "       /opt/aws/bin/cfn-signal -e 1 --stack ",
                        { "Ref": "AWS::StackName" },
                        " --resource CrucibleHost\n",
                "       exit 1\n",
                "    }\n",
                "    \n",
                "    # Install RPMs needed by the cfn-tools.\n",
                "    yum --enablerepo=",
                     { "Ref": "EpelRepo" },
                     " install -y ",
                     { "Ref": "PyStache" },
                     " ",
                     { "Ref": "PipRpm" },
                     " || err_exit 'Could not install Cfn dependencies.'\n",
                "    \n",
                "    # Upgrade pip and setuptools\n",
                "    PYPI_URL=",
                     { "Ref": "PipIndexFips" },
                     "\n",
                "    pip install --index-url=\"$PYPI_URL\"",
                     " --upgrade pip setuptools\n\n",
                "    # Update cfn-bootstrapper hash method\n",
                "    printf 'Updating CFn hash-check method... '\n",
                "    PYVERS=$(python -c 'import sys;",
                     " version=sys.version_info[:2];",
                     " print(\"{0}.{1}\".format(*version))')\n",
                "    sed -i '/^[ \\t][ \\t]*self._etag/s/etag$/None/'",
                     " /usr/lib/python${PYVERS}/site-packages/cfnbootstrap",
                     "/util.py && echo 'Success' || ",
                     "err_exit 'Failed updating CFn hash-method'\n",
                "    \n",
                "    # Initialize the CFn subsystems\n",
                "    /opt/aws/bin/cfn-init -v -c launch",
                     " --stack ",
                     { "Ref": "AWS::StackName" },
                     " --resource CrucibleHost",
                     {
                       "Fn::If": [
                         "UseCfnUrl",
                         {
                           "Fn::Join": [
                             "",
                             [
                               " --url ",
                               { "Ref": "CfnEndpointUrl" }
                             ]
                           ]
                         },
                         ""
                       ]
                     },
                     " --region ",
                     { "Ref": "AWS::Region" },
                     " ||",
                     " ( echo 'ERROR: cfn-init failed! Aborting!';",
                     " /opt/aws/bin/cfn-signal -e 1",
                     "  --stack ",
                     { "Ref": "AWS::StackName" },
                     " --resource CrucibleHost",
                     {
                       "Fn::If": [
                         "UseCfnUrl",
                         {
                           "Fn::Join": [
                             "",
                             [
                               " --url ",
                               { "Ref": "CfnEndpointUrl" }
                             ]
                           ]
                         },
                         ""
                       ]
                     },
                     " --region ",
                     { "Ref": "AWS::Region" },
                     ";",
                     " exit 1",
                     " )\n\n"
              ]
            ]
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    }
  }
}
